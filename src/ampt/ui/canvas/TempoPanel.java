/*
 * TempoPanel.java
 *
 * Created on Nov 28, 2009, 5:09:11 PM
 */
package ampt.ui.canvas;

import ampt.ui.tempo.TempoEvent;
import ampt.ui.tempo.TempoListener;
import java.text.DecimalFormat;
import javax.swing.JSpinner.NumberEditor;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.event.EventListenerList;

/**
 * TempoPanel holds UI components for managing the global tempo of AMPT.
 *
 * @author Ben
 */
public class TempoPanel extends javax.swing.JPanel {

	private static final long serialVersionUID = 7086254716835339878L;

	// listeners for tempo changes
    private EventListenerList _tempoListeners = new EventListenerList();

    // this is equal to tempo * 10 (temporary workaround for issue with spinner)
    private long _currentTempo = 1000; // 100.0

    /** Creates new form TempoPanel */
    public TempoPanel() {
        initComponents();

        //TODO - are these reasonable limits?
        double min = 6.0d;
        double value = 100.0d;
        double max = 300.0d;
        double stepSize = 0.1d;

        SpinnerNumberModel model = new SpinnerNumberModel(value, min, max, stepSize);
        tempoSpinner.setModel(model);

        NumberEditor editor = (NumberEditor) tempoSpinner.getEditor();
        DecimalFormat format = editor.getFormat();
        format.setMinimumFractionDigits(1);
        editor.getTextField().setHorizontalAlignment(SwingConstants.CENTER);
        
        tempoSpinner.setValue(new Double(100.0));
    }

    /**
     * Add a new tempo listener.
     *
     * @param l the listener to add
     */
    public void addTempoListener(TempoListener l) {
        _tempoListeners.add(TempoListener.class, l);
        // initialize device when added
        l.tempoChanged(createTempoEvent());
    }

    /**
     * Remove a tempo listener.
     *
     * @param l the listener to remove
     */
    public void removeTempoListener(TempoListener l) {
        _tempoListeners.remove(TempoListener.class, l);
    }

    // Notify all listeners that have registered interest for
    // notification on this event type.  The event instance
    // is lazily created using the parameters passed into
    // the fire method.
    protected void fireTempoChange() {

        TempoEvent tempoEvent = createTempoEvent();

        // Guaranteed to return a non-null array
        Object[] listeners = _tempoListeners.getListenerList();

        // Process the listeners last to first, notifying
        // those that are interested in this event
        for (int i = listeners.length-2; i >= 0; i-=2) {
            if (listeners[i] == TempoListener.class) {
                ((TempoListener) listeners[i+1]).tempoChanged(tempoEvent);
            }
        }
    }

    private TempoEvent createTempoEvent() {
       float newTempo = _currentTempo / 10.0F;
       return new TempoEvent(this, TempoEvent.TEMPO_CHANGE, newTempo);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tempoSpinner = new javax.swing.JSpinner();
        tempoLabel = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tempo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        setPreferredSize(new java.awt.Dimension(200, 75));

        tempoSpinner.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tempoSpinner.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(100.0f), Float.valueOf(6.0f), Float.valueOf(300.0f), Float.valueOf(0.1f)));
        tempoSpinner.setToolTipText("Global Tempo controls the tempo of all filters.");
        tempoSpinner.setValue(100.0F);
        tempoSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tempoSpinnerStateChanged(evt);
            }
        });

        tempoLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tempoLabel.setText("BPM");
        tempoLabel.setToolTipText("Beats Per Minute");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tempoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tempoLabel)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempoSpinner)
                    .addComponent(tempoLabel))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tempoSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tempoSpinnerStateChanged

        // TODO - why is the spinner value comming back slightly off?
        // this will clean it up for now
        long t = Math.round((Double)tempoSpinner.getValue() * 10);

        // only fire events if the tempo really changed
        if(t != _currentTempo) {
            _currentTempo = t;
            // notify listeners
            fireTempoChange();
        }
    }//GEN-LAST:event_tempoSpinnerStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel tempoLabel;
    private javax.swing.JSpinner tempoSpinner;
    // End of variables declaration//GEN-END:variables
}
